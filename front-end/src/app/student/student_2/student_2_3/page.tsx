// "use client";

// import React, { useEffect, useState } from "react";
// import { useRouter } from "next/navigation";
// import Navbar from "@/components/navbar";
// import SidenavAdmin from "@/components/sidenavAdmin";
// import { useDataContext } from "context/DataContext";
// import { getCourses } from "@/components/coursesData";

// function SummaryPage() {
//   const { formData, saveRecord } = useDataContext();
//   const router = useRouter();
//   const [showPopup, setShowPopup] = useState(false);
//   const [selectedCategoryTitle, setSelectedCategoryTitle] = useState("");
//   const [selectedSubCategoryTitle, setSelectedSubCategoryTitle] = useState("");
//   const [selectedSubCategoryProgress, setSelectedSubCategoryProgress] = useState("");
//   const [isSaving, setIsSaving] = useState(false);
//   const [isSaved, setIsSaved] = useState(false); // Track save status

//   useEffect(() => {
//     const courses = getCourses();
//     const selectedCategoryId = Number(formData.selectedCategory);
//     const selectedCourse = courses.find(course => course.id === selectedCategoryId);
//     const selectedSubCourse = selectedCourse?.subCourses.find(subCourse => subCourse.id === formData.selectedSubCategory);

//     setSelectedCategoryTitle(selectedCourse?.title || "N/A");
//     setSelectedSubCategoryTitle(selectedSubCourse?.title || "N/A");
//     setSelectedSubCategoryProgress(selectedSubCourse?.progress || "N/A");
//   }, [formData.selectedCategory, formData.selectedSubCategory]);

//   if (!formData) {
//     return <div>Loading...</div>;
//   }

//   const handleConfirm = () => {
//     if (isSaving) return;

//     setIsSaving(true);

//     saveRecord(formData); // Save the formData

//     setIsSaved(true); // Mark as saved

//     // Open the success popup after saving
//     setShowPopup(true);
//   };

//   const handlePopupClose = () => {
//     setShowPopup(false); // Close the popup when "‡∏ï‡∏Å‡∏•‡∏á" is clicked
//     router.push('/student/student_2/student_2_1'); // Redirect after closing popup to /student/student_2/student_2_1
//   };

//   const handlePopupOpen = () => {
//     if (!isSaving && !isSaved) {
//       setShowPopup(true);
//     }
//   };

//   return (
//     <div className="h-screen font-mitr">
//       <Navbar />

//       <div className="flex h-full">
//         <SidenavAdmin />
//         <main className="flex-1 p-6 flex flex-col items-center">
//           <h2 className="text-2xl font-bold text-[#000000] mb-6">‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</h2>
//           <div className="w-full max-w-md bg-white p-8 rounded-lg shadow-md space-y-4">
//             <div><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> {selectedCategoryTitle || "N/A"}</div>
//             <div><strong>‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢:</strong> {selectedSubCategoryTitle || "N/A"}</div>
//             <div><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> {formData.additionalInfo || "N/A"}</div>
//             <div><strong>‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:</strong> {formData.gender || "N/A"}</div>
//             <div><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà:</strong> {formData.location || "N/A"}</div>
//             <div><strong>‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢:</strong> {formData.patientRoom || "N/A"}</div>
//             <div><strong>‡πÄ‡∏ï‡∏µ‡∏¢‡∏á:</strong> {formData.bed || "N/A"}</div>
//             <div><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> {formData.date || "N/A"}</div>
//           </div>

//           <div className="mt-6 flex justify-between w-full max-w-md">
//             <button
//               className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600"
//               onClick={() => router.back()}
//             >
//               ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
//             </button>
//             <button
//               className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600"
//               onClick={handlePopupOpen} // Open popup
//               disabled={isSaving || isSaved} // Disable while saving or after save
//             >
//               ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
//             </button>
//           </div>
//         </main>
//       </div>

//       {/* Show the success popup after save */}
//       {showPopup && (
//         <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
//           <div className="bg-white rounded-lg p-6 w-80 flex flex-col items-center">
//             <img
//               src="/success.png" // Use the correct image path
//               alt="Success"
//               className="w-24 h-24 mb-4"
//             />
//             <h3 className="text-lg font-bold mb-4 text-center">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h3>
//             <button
//               className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600"
//               onClick={handlePopupClose} // Close popup and redirect
//             >
//               ‡∏ï‡∏Å‡∏•‡∏á
//             </button>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// }

// export default SummaryPage;

"use client";

import React, { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import Navbar from "@/components/navbar"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Navbar
import SidenavAdmin from "@/components/sidenavAdmin"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Sidebar
import { useDataContext } from "context/DataContext"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Context ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
import { getCourses } from "@/components/coursesData"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£

function SummaryPage() {
  const { formData, saveRecord } = useDataContext(); // ‡πÉ‡∏ä‡πâ Context ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const router = useRouter();
  
  const [showPopup, setShowPopup] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Popup
  const [selectedCategoryTitle, setSelectedCategoryTitle] = useState(""); // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const [selectedSubCategoryTitle, setSelectedSubCategoryTitle] = useState(""); // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
  const [selectedSubCategoryProgress, setSelectedSubCategoryProgress] = useState(""); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
  const [isSaving, setIsSaving] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const [isSaved, setIsSaved] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

  useEffect(() => {
    const courses = getCourses(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const selectedCategoryId = Number(formData.selectedCategory);
    const selectedCourse = courses.find(course => course.id === selectedCategoryId); // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const selectedSubCourse = selectedCourse?.subCourses.find(subCourse => subCourse.id === formData.selectedSubCategory); // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

    setSelectedCategoryTitle(selectedCourse?.title || "N/A");
    setSelectedSubCategoryTitle(selectedSubCourse?.title || "N/A");
    setSelectedSubCategoryProgress(selectedSubCourse?.progress || "N/A");
  }, [formData.selectedCategory, formData.selectedSubCategory]);

  if (!formData) {
    return <div>Loading...</div>;
  }

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏î "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"
  const handleConfirm = () => {
    if (isSaving) return;

    setIsSaving(true); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å

    saveRecord(formData); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• formData

    setIsSaved(true); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
    setShowPopup(true); // ‡πÅ‡∏™‡∏î‡∏á Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
  };

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Popup ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ `/student/student_2/student_2_1`
  const handlePopupClose = () => {
    setShowPopup(false);
    router.push('/student/student_2/student_2_1');
  };

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
  const handlePopupOpen = () => {
    if (!isSaving && !isSaved) {
      setShowPopup(true);
    }
  };

  return (
    <div className="h-screen font-mitr flex flex-col">
      {/* ‚úÖ Navbar ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏ï‡∏≤‡∏° */}
      <Navbar />

      <div className="flex flex-1 overflow-hidden">
        {/* ‚úÖ Sidebar ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏° */}
        <SidenavAdmin />

        {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
        <main className="flex-1 p-6 flex flex-col items-center overflow-auto">
          <h2 className="text-2xl font-bold text-[#000000] mb-6">‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</h2>
          <div className="w-full max-w-md bg-white p-8 rounded-lg shadow-md space-y-4">
            <div><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> {selectedCategoryTitle || "N/A"}</div>
            <div><strong>‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢:</strong> {selectedSubCategoryTitle || "N/A"}</div>
            <div><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> {formData.additionalInfo || "N/A"}</div>
            <div><strong>‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:</strong> {formData.gender || "N/A"}</div>
            <div><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà:</strong> {formData.location || "N/A"}</div>
            <div><strong>‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢:</strong> {formData.patientRoom || "N/A"}</div>
            <div><strong>‡πÄ‡∏ï‡∏µ‡∏¢‡∏á:</strong> {formData.bed || "N/A"}</div>
            <div><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> {formData.date || "N/A"}</div>
          </div>

          {/* üîπ ‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö" ‡πÅ‡∏•‡∏∞ "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å" */}
          <div className="mt-6 flex justify-between w-full max-w-md">
            <button
              className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600"
              onClick={() => router.back()}
            >
              ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
            </button>
            <button
              className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600"
              onClick={handlePopupOpen} // ‡πÄ‡∏õ‡∏¥‡∏î Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
              disabled={isSaving || isSaved} // ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
            >
              ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
            </button>
          </div>
        </main>
      </div>

      {/* üîπ Popup ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à */}
      {showPopup && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
          <div className="bg-white rounded-lg p-6 w-80 flex flex-col items-center">
            <img
              src="/success.png" // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
              alt="Success"
              className="w-24 h-24 mb-4"
            />
            <h3 className="text-lg font-bold mb-4 text-center">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h3>
            <button
              className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600"
              onClick={handlePopupClose} // ‡∏õ‡∏¥‡∏î Popup ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
            >
              ‡∏ï‡∏Å‡∏•‡∏á
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default SummaryPage;
