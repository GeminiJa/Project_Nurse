// "use client";

// import React, { useState, useEffect } from "react";
// import { useRouter } from "next/navigation";
// import Navbar from "@/components/navbar";
// import SidenavAdmin from "@/components/sidenavAdmin";
// import { useDataContext } from "context/DataContext";
// import type { FormRecord } from "context/DataContext";

// const ExperienceEntryPage: React.FC = () => {
//   const { formData, setFormData, saveRecord } = useDataContext();
//   const router = useRouter();

//   const [location, setLocation] = useState(formData?.location || "");
//   const [patientRoom, setPatientRoom] = useState(formData?.patientRoom || "");
//   const [bed, setBed] = useState(formData?.bed || "");
//   const [date, setDate] = useState(formData?.date || "");

//   const locationOptions = ["‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3"];
//   const patientRoomOptions = ["‡∏´‡πâ‡∏≠‡∏á 1", "‡∏´‡πâ‡∏≠‡∏á 2", "‡∏´‡πâ‡∏≠‡∏á 3"];

//   useEffect(() => {
//     if (formData) {
//       setLocation(formData.location ?? "");
//       setPatientRoom(formData.patientRoom ?? "");
//       setBed(formData.bed ?? "");
//       setDate(formData.date ?? "");
//     }
//   }, [formData]);

//   const handleSubmit = () => {
//     if (!location || !patientRoom || !bed || !date) {
//       alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
//       return;
//     }

//     // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö `FormRecord`
//     const updatedData: FormRecord = {
//       ...formData,
//       id: Date.now(),
//       date,
//       location,
//       patientRoom,
//       bed,
//       status: "pending",
//     };

//     setFormData(updatedData);
//     saveRecord(updatedData);

//     router.push("/student/student_2/student_2_3");
//   };

//   return (
//     <div className="h-screen font-mitr">
//       <Navbar />
//       <div className="flex h-full">
//         <SidenavAdmin />
//         <main className="flex-1 p-9 bg-gray-100 flex flex-col items-center">
//           <h2 className="text-3xl font-bold text-[#000000] mb-9">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</h2>
//           <div className="w-full max-w-lg bg-white p-12 rounded-lg shadow-md space-y-9">
//             <div>
//               <label className="block text-gray-700 mb-1.5 text-lg">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</label>
//               <select
//                 className="w-full p-3 text-lg border border-gray-300 rounded-lg"
//                 value={location}
//                 onChange={(e) => setLocation(e.target.value)}
//               >
//                 <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</option>
//                 {locationOptions.map((loc, index) => (
//                   <option key={index} value={loc}>
//                     {loc}
//                   </option>
//                 ))}
//               </select>
//             </div>

//             <div>
//               <label className="block text-gray-700 mb-1.5 text-lg">‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</label>
//               <select
//                 className="w-full p-3 text-lg border border-gray-300 rounded-lg"
//                 value={patientRoom}
//                 onChange={(e) => setPatientRoom(e.target.value)}
//               >
//                 <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</option>
//                 {patientRoomOptions.map((room, index) => (
//                   <option key={index} value={room}>
//                     {room}
//                   </option>
//                 ))}
//               </select>
//             </div>

//             <div>
//               <label className="block text-gray-700 mb-1.5 text-lg">‡πÄ‡∏ï‡∏µ‡∏¢‡∏á</label>
//               <input
//                 type="text"
//                 className="w-full p-3 text-lg border border-gray-300 rounded-lg"
//                 value={bed}
//                 onChange={(e) => setBed(e.target.value)}
//               />
//             </div>

//             <div>
//               <label className="block text-gray-700 mb-1.5 text-lg">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
//               <input
//                 type="date"
//                 className="w-full p-3 text-lg border border-gray-300 rounded-lg"
//                 value={date}
//                 onChange={(e) => setDate(e.target.value)}
//               />
//             </div>

//             <div className="mt-9 flex justify-between w-full max-w-lg">
//               <button
//                 className="bg-blue-500 text-white px-6 py-3 text-lg rounded-lg hover:bg-blue-600"
//                 onClick={() => router.back()}
//               >
//                 ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
//               </button>

//               <button
//                 className="bg-green-500 text-white px-6 py-3 text-lg rounded-lg hover:bg-green-600"
//                 onClick={handleSubmit}
//               >
//                 ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
//               </button>
//             </div>
//           </div>
//         </main>
//       </div>
//     </div>
//   );
// };

// export default ExperienceEntryPage;


"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import Navbar from "@/components/navbar"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Navbar
import SidenavAdmin from "@/components/sidenavAdmin"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Sidebar
import { useDataContext } from "context/DataContext"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Context ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
import type { FormRecord } from "context/DataContext"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Type ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Form

const ExperienceEntryPage: React.FC = () => {
  const { formData, setFormData, saveRecord } = useDataContext(); // ‡πÉ‡∏ä‡πâ Context ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const router = useRouter();

  // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å formData (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const [location, setLocation] = useState(formData?.location || "");
  const [patientRoom, setPatientRoom] = useState(formData?.patientRoom || "");
  const [bed, setBed] = useState(formData?.bed || "");
  const [date, setDate] = useState(formData?.date || "");

  // üîπ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
  const locationOptions = ["‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3"];
  const patientRoomOptions = ["‡∏´‡πâ‡∏≠‡∏á 1", "‡∏´‡πâ‡∏≠‡∏á 2", "‡∏´‡πâ‡∏≠‡∏á 3"];

  // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å formData ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    if (formData) {
      setLocation(formData.location ?? "");
      setPatientRoom(formData.patientRoom ?? "");
      setBed(formData.bed ?? "");
      setDate(formData.date ?? "");
    }
  }, [formData]);

  const handleSubmit = () => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
    if (!location || !patientRoom || !bed || !date) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö `FormRecord`
    const updatedData: FormRecord = {
      ...formData,
      id: Date.now(),
      date,
      location,
      patientRoom,
      bed,
      status: "pending",
    };

    setFormData(updatedData);
    saveRecord(updatedData);

    // ‚úÖ ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    router.push("/student/student_2/student_2_3");
  };

  return (
    <div className="h-screen font-mitr flex flex-col">
      {/* ‚úÖ Navbar ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏ï‡∏≤‡∏° */}
      <Navbar />

      <div className="flex flex-1 overflow-hidden">
        {/* ‚úÖ Sidebar ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏° */}
        <SidenavAdmin />

        {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
        <main className="flex-1 p-9 bg-gray-100 flex flex-col items-center overflow-auto">
          <h2 className="text-3xl font-bold text-[#000000] mb-9">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</h2>
          <div className="w-full max-w-lg bg-white p-12 rounded-lg shadow-md space-y-9">
            {/* üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå */}
            <div>
              <label className="block text-gray-700 mb-1.5 text-lg">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</label>
              <select
                className="w-full p-3 text-lg border border-gray-300 rounded-lg"
                value={location}
                onChange={(e) => setLocation(e.target.value)}
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</option>
                {locationOptions.map((loc, index) => (
                  <option key={index} value={loc}>
                    {loc}
                  </option>
                ))}
              </select>
            </div>

            {/* üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ */}
            <div>
              <label className="block text-gray-700 mb-1.5 text-lg">‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</label>
              <select
                className="w-full p-3 text-lg border border-gray-300 rounded-lg"
                value={patientRoom}
                onChange={(e) => setPatientRoom(e.target.value)}
              >
                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</option>
                {patientRoomOptions.map((room, index) => (
                  <option key={index} value={room}>
                    {room}
                  </option>
                ))}
              </select>
            </div>

            {/* üîπ ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡πÄ‡∏ï‡∏µ‡∏¢‡∏á */}
            <div>
              <label className="block text-gray-700 mb-1.5 text-lg">‡πÄ‡∏ï‡∏µ‡∏¢‡∏á</label>
              <input
                type="text"
                className="w-full p-3 text-lg border border-gray-300 rounded-lg"
                value={bed}
                onChange={(e) => setBed(e.target.value)}
              />
            </div>

            {/* üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå */}
            <div>
              <label className="block text-gray-700 mb-1.5 text-lg">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
              <input
                type="date"
                className="w-full p-3 text-lg border border-gray-300 rounded-lg"
                value={date}
                onChange={(e) => setDate(e.target.value)}
              />
            </div>

            {/* üîπ ‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö" ‡πÅ‡∏•‡∏∞ "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ" */}
            <div className="mt-9 flex justify-between w-full max-w-lg">
              <button
                className="bg-blue-500 text-white px-6 py-3 text-lg rounded-lg hover:bg-blue-600"
                onClick={() => router.back()}
              >
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </button>

              <button
                className="bg-green-500 text-white px-6 py-3 text-lg rounded-lg hover:bg-green-600"
                onClick={handleSubmit}
              >
                ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
              </button>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default ExperienceEntryPage;
